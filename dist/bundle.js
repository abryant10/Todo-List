(()=>{"use strict";var n={772:(n,e,t)=>{t.d(e,{Z:()=>A});var r=t(15),i=t.n(r),o=t(645),a=t.n(o)()(i());a.push([n.id,"html {\n    font-family: Arial, Helvetica, sans-serif;\n    height: 100%;\n}\nbody {\n    margin: 0;\n    background-color: rgb(255, 255, 255);\n    height: 100%;\n}\n.viewport {\n    display: flex;\n    flex-flow: column;\n    margin: 0%;\n    height: 100%;\n    width: 100%;\n}\nheader {\n    padding: 15px;\n    background-color: rgb(58, 84, 153);\n    color: white;\n    font-size: 60px;\n    /* width: 100%; */\n}\n.listDeletePopup {\n    display: none; \n    position: fixed; \n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0,0,0,0.4);\n  }\n  .listDeleteContainer {\n    position: relative;\n    background-color: rgb(58, 84, 153);\n    color: #0A100D;\n    max-width: 500px;\n    margin: 15% auto;\n    padding: 0;\n    border: 1px solid rgb(255, 255, 255);\n    border-radius: 10px;\n    width: 60%;\n    box-shadow: 6px 10px 20px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    animation-name: animatetop;\n    animation-duration: 0.4s\n  }\n  @keyframes animatetop {\n    from {top: -300px; opacity: 0}\n    to {top: 0; opacity: 1}\n  }\n .navBodyContainer {\n    flex-grow: 1;\n    display: flex;\n    flex-flow: row;\n}\n.navContainer {\n    background-color: rgb(221, 221, 221);\n    min-width: 250px;\n}\n.nav {\n    padding: 20px;\n    padding-left: 30px;\n    display: flex;\n    flex-direction: column;\n}\n\n.navButton {\n    display: flex;\n    flex-direction: row;\n    justify-content:space-between;\n    align-items: center;\n    margin: 10px;\n    border-style: none;\n    text-align: start;\n    background-color: transparent;\n    font-size: large;\n    border-radius: 5px;\n}\n.navButton:hover {\n    background-color: rgb(180, 180, 180);\n    cursor: pointer;\n}\n.navButton:hover .deleteListButton { display: block;}\n.addListButton {\n    position: relative;\n    float: right;\n    margin-right: 10px;\n    border-style: none;\n    border-radius: 6px;\n    width: 25px;\n    height: 25px;\n    font-size: large;\n    padding-top: 2px;\n}\n.addListButton:hover {\n    background-color: rgb(180, 180, 180);\n    cursor: pointer;\n}\n.addListForm {\n    display: none;\n}\n.addListText {\n    margin-top: 10px;\n    margin-left: 40px;\n    width: 130px;\n    border: none;\n    border-radius: 5px;\n    padding: 5px;\n}\n.addListText:focus {\n    outline: none;\n}\n.divider {\n    width: 90%;\n    margin-left: 4%;\n    border-top: 2px solid rgb(177, 177, 177);\n    text-align: center;\n    padding-top: 10px;\n    font-size: 30px;\n    font-weight: 600;\n}\n.deleteListButton {\n    display: none;\n    text-align: center;\n    cursor: pointer;\n    border-style: none;\n    border-radius: 6px;\n    width: 17px;\n    height: 17px;\n    font-size: 10px;\n    margin-left: 10px;\n    margin-right: 5px;\n    margin-bottom: 1px;\n    padding: 0%;\n}\n.deleteListButton:hover {\n    background: white;\n}\n.listButton {\n    display: flex;\n    cursor: pointer;\n    flex-grow: 1;\n    background: none;\n    border: none;\n    font-size: 20px;\n}\n.taskViewerContainer {\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n} \n.taskViewerNav {\n    display: flex;\n    padding: 20px;\n\n}\n.taskViewer {\n    display: flex;\n    flex-direction: column;\n    margin-left: 40px;\n}\n#sortBySelector {\n    margin-left: 10px;\n    border-radius: 5px;\n}\n#sortBySelector:focus {\n    outline: none;\n}\n.taskFormContainer {\n    display: none;\n}\n.taskCard {\n    display: flex;\n    flex-direction: column;\n    min-width: 100px;\n    max-width: 600px;\n    margin: 15px;\n    margin-right: 130px;\n    background-color: rgb(241, 241, 241);\n    border-radius: 25px;\n    padding: 5px;\n    padding-left: 10px;\n    padding-right: 20px;\n}\n.taskCard:hover .TCPriorButton {display: block;}\n.taskCard:hover .TCDelete {display: block;}\n.taskCard:hover .TCExpand {display: block;}\n.TCTop {\n    display: flex;\n    flex-direction: row;\n}\n.TCTopLeft {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n}\n.TCCheck {\n}\n.TCTitle {\n    border: none;\n    margin-left: 5px;\n    font-size: 30px;\n    background: transparent;\n    min-width: none;\n    cursor: pointer;\n}\n.TCTopRight {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n    align-items: center;\n    justify-content: flex-end;\n}\n.TCDate {\n    border: none;\n    font-family: Arial, Helvetica, sans-serif;\n    background: transparent;\n}\n.TCDelete {\n    display: none;\n    font-size: 10px;\n    border-radius: 6px;\n    border: 1px solid rgb(133, 133, 133);\n    color: rgb(0, 0, 0);\n    margin: 3px;\n    width: 20px;\n    height: 17px;\n    padding: 0%;\n}\n.TCBottom {\n    display: none;\n}\n.expandedInfo {\n    display: block;\n}\n.TCNotes {\n    border: none;\n    background-color: white;\n    padding: 5px;\n    border-radius: 7px;\n    cursor: pointer;\n}\n.TCPriorityButtonContainer{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.TCButton:hover {\n    background-color: white;\n}\n.TCPriorButton {\n    display: none;\n    font-size: 10px;\n    border-radius: 6px;\n    border: 1px solid rgb(133, 133, 133);\n    color: rgb(90, 90, 90);\n    margin: 3px;\n    width: 20px;\n    height: 17px;\n    padding: 0%;\n}\n.TCMiddle {\n    display: flex;\n    justify-content: flex-end;\n}\n.TCExpand {\n    display: none;\n    font-size: 10px;\n    border-radius: 6px;\n    border: 1px solid rgb(133, 133, 133);\n    color: rgb(0, 0, 0);\n    margin: 3px;\n    padding: 2px;\n}\n.TCList {\n    background-color: white;\n    padding: 5px;\n    border-radius: 7px;\n}\n.newTaskButton {\n    margin-bottom: 200px;\n}\nfooter {\n   position: fixed;\n   left: 0;\n   bottom: 0;\n   width: 100%;\n   background-color: rgb(58, 84, 153);\n   color: white;\n   text-align: center;\n   padding: 5px;\n}  ","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"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",sourcesContent:["html {\n    font-family: Arial, Helvetica, sans-serif;\n    height: 100%;\n}\nbody {\n    margin: 0;\n    background-color: rgb(255, 255, 255);\n    height: 100%;\n}\n.viewport {\n    display: flex;\n    flex-flow: column;\n    margin: 0%;\n    height: 100%;\n    width: 100%;\n}\nheader {\n    padding: 15px;\n    background-color: rgb(58, 84, 153);\n    color: white;\n    font-size: 60px;\n    /* width: 100%; */\n}\n.listDeletePopup {\n    display: none; \n    position: fixed; \n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0,0,0,0.4);\n  }\n  .listDeleteContainer {\n    position: relative;\n    background-color: rgb(58, 84, 153);\n    color: #0A100D;\n    max-width: 500px;\n    margin: 15% auto;\n    padding: 0;\n    border: 1px solid rgb(255, 255, 255);\n    border-radius: 10px;\n    width: 60%;\n    box-shadow: 6px 10px 20px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n    animation-name: animatetop;\n    animation-duration: 0.4s\n  }\n  @keyframes animatetop {\n    from {top: -300px; opacity: 0}\n    to {top: 0; opacity: 1}\n  }\n .navBodyContainer {\n    flex-grow: 1;\n    display: flex;\n    flex-flow: row;\n}\n.navContainer {\n    background-color: rgb(221, 221, 221);\n    min-width: 250px;\n}\n.nav {\n    padding: 20px;\n    padding-left: 30px;\n    display: flex;\n    flex-direction: column;\n}\n\n.navButton {\n    display: flex;\n    flex-direction: row;\n    justify-content:space-between;\n    align-items: center;\n    margin: 10px;\n    border-style: none;\n    text-align: start;\n    background-color: transparent;\n    font-size: large;\n    border-radius: 5px;\n}\n.navButton:hover {\n    background-color: rgb(180, 180, 180);\n    cursor: pointer;\n}\n.navButton:hover .deleteListButton { display: block;}\n.addListButton {\n    position: relative;\n    float: right;\n    margin-right: 10px;\n    border-style: none;\n    border-radius: 6px;\n    width: 25px;\n    height: 25px;\n    font-size: large;\n    padding-top: 2px;\n}\n.addListButton:hover {\n    background-color: rgb(180, 180, 180);\n    cursor: pointer;\n}\n.addListForm {\n    display: none;\n}\n.addListText {\n    margin-top: 10px;\n    margin-left: 40px;\n    width: 130px;\n    border: none;\n    border-radius: 5px;\n    padding: 5px;\n}\n.addListText:focus {\n    outline: none;\n}\n.divider {\n    width: 90%;\n    margin-left: 4%;\n    border-top: 2px solid rgb(177, 177, 177);\n    text-align: center;\n    padding-top: 10px;\n    font-size: 30px;\n    font-weight: 600;\n}\n.deleteListButton {\n    display: none;\n    text-align: center;\n    cursor: pointer;\n    border-style: none;\n    border-radius: 6px;\n    width: 17px;\n    height: 17px;\n    font-size: 10px;\n    margin-left: 10px;\n    margin-right: 5px;\n    margin-bottom: 1px;\n    padding: 0%;\n}\n.deleteListButton:hover {\n    background: white;\n}\n.listButton {\n    display: flex;\n    cursor: pointer;\n    flex-grow: 1;\n    background: none;\n    border: none;\n    font-size: 20px;\n}\n.taskViewerContainer {\n    display: flex;\n    flex-grow: 1;\n    flex-direction: column;\n} \n.taskViewerNav {\n    display: flex;\n    padding: 20px;\n\n}\n.taskViewer {\n    display: flex;\n    flex-direction: column;\n    margin-left: 40px;\n}\n#sortBySelector {\n    margin-left: 10px;\n    border-radius: 5px;\n}\n#sortBySelector:focus {\n    outline: none;\n}\n.taskFormContainer {\n    display: none;\n}\n.taskCard {\n    display: flex;\n    flex-direction: column;\n    min-width: 100px;\n    max-width: 600px;\n    margin: 15px;\n    margin-right: 130px;\n    background-color: rgb(241, 241, 241);\n    border-radius: 25px;\n    padding: 5px;\n    padding-left: 10px;\n    padding-right: 20px;\n}\n.taskCard:hover .TCPriorButton {display: block;}\n.taskCard:hover .TCDelete {display: block;}\n.taskCard:hover .TCExpand {display: block;}\n.TCTop {\n    display: flex;\n    flex-direction: row;\n}\n.TCTopLeft {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n}\n.TCCheck {\n}\n.TCTitle {\n    border: none;\n    margin-left: 5px;\n    font-size: 30px;\n    background: transparent;\n    min-width: none;\n    cursor: pointer;\n}\n.TCTopRight {\n    display: flex;\n    flex-direction: row;\n    flex-grow: 1;\n    align-items: center;\n    justify-content: flex-end;\n}\n.TCDate {\n    border: none;\n    font-family: Arial, Helvetica, sans-serif;\n    background: transparent;\n}\n.TCDelete {\n    display: none;\n    font-size: 10px;\n    border-radius: 6px;\n    border: 1px solid rgb(133, 133, 133);\n    color: rgb(0, 0, 0);\n    margin: 3px;\n    width: 20px;\n    height: 17px;\n    padding: 0%;\n}\n.TCBottom {\n    display: none;\n}\n.expandedInfo {\n    display: block;\n}\n.TCNotes {\n    border: none;\n    background-color: white;\n    padding: 5px;\n    border-radius: 7px;\n    cursor: pointer;\n}\n.TCPriorityButtonContainer{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n}\n.TCButton:hover {\n    background-color: white;\n}\n.TCPriorButton {\n    display: none;\n    font-size: 10px;\n    border-radius: 6px;\n    border: 1px solid rgb(133, 133, 133);\n    color: rgb(90, 90, 90);\n    margin: 3px;\n    width: 20px;\n    height: 17px;\n    padding: 0%;\n}\n.TCMiddle {\n    display: flex;\n    justify-content: flex-end;\n}\n.TCExpand {\n    display: none;\n    font-size: 10px;\n    border-radius: 6px;\n    border: 1px solid rgb(133, 133, 133);\n    color: rgb(0, 0, 0);\n    margin: 3px;\n    padding: 2px;\n}\n.TCList {\n    background-color: white;\n    padding: 5px;\n    border-radius: 7px;\n}\n.newTaskButton {\n    margin-bottom: 200px;\n}\nfooter {\n   position: fixed;\n   left: 0;\n   bottom: 0;\n   width: 100%;\n   background-color: rgb(58, 84, 153);\n   color: white;\n   text-align: center;\n   padding: 5px;\n}  "],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,r){"string"==typeof n&&(n=[[null,n,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var a=this[o][0];null!=a&&(i[a]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&i[l[0]]||(t&&(l[2]?l[2]="".concat(t," and ").concat(l[2]):l[2]=t),e.push(l))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}n.exports=function(n){var t,r,i=(r=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var r,i,o=[],a=!0,A=!1;try{for(t=t.call(n);!(a=(r=t.next()).done)&&(o.push(r.value),!e||o.length!==e);a=!0);}catch(n){A=!0,i=n}finally{try{a||null==t.return||t.return()}finally{if(A)throw i}}return o}}(t,r)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(n,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=i[1],a=i[3];if("function"==typeof btoa){var A=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(A),d="/*# ".concat(l," */"),s=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[o].concat(s).concat([d]).join("\n")}return[o].join("\n")}},379:(n,e,t)=>{var r,i=function(){var n={};return function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}n[e]=t}return n[e]}}(),o=[];function a(n){for(var e=-1,t=0;t<o.length;t++)if(o[t].identifier===n){e=t;break}return e}function A(n,e){for(var t={},r=[],i=0;i<n.length;i++){var A=n[i],l=e.base?A[0]+e.base:A[0],d=t[l]||0,s="".concat(l," ").concat(d);t[l]=d+1;var c=a(s),p={css:A[1],media:A[2],sourceMap:A[3]};-1!==c?(o[c].references++,o[c].updater(p)):o.push({identifier:s,updater:f(p,e),references:1}),r.push(s)}return r}function l(n){var e=document.createElement("style"),r=n.attributes||{};if(void 0===r.nonce){var o=t.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(n){e.setAttribute(n,r[n])})),"function"==typeof n.insert)n.insert(e);else{var a=i(n.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(e)}return e}var d,s=(d=[],function(n,e){return d[n]=e,d.filter(Boolean).join("\n")});function c(n,e,t,r){var i=t?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(n.styleSheet)n.styleSheet.cssText=s(e,i);else{var o=document.createTextNode(i),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(o,a[e]):n.appendChild(o)}}function p(n,e,t){var r=t.css,i=t.media,o=t.sourceMap;if(i?n.setAttribute("media",i):n.removeAttribute("media"),o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleSheet)n.styleSheet.cssText=r;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(r))}}var C=null,u=0;function f(n,e){var t,r,i;if(e.singleton){var o=u++;t=C||(C=l(e)),r=c.bind(null,t,o,!1),i=c.bind(null,t,o,!0)}else t=l(e),r=p.bind(null,t,e),i=function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)};return r(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;r(n=e)}else i()}}n.exports=function(n,e){(e=e||{}).singleton||"boolean"==typeof e.singleton||(e.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var t=A(n=n||[],e);return function(n){if(n=n||[],"[object Array]"===Object.prototype.toString.call(n)){for(var r=0;r<t.length;r++){var i=a(t[r]);o[i].references--}for(var l=A(n,e),d=0;d<t.length;d++){var s=a(t[d]);0===o[s].references&&(o[s].updater(),o.splice(s,1))}t=l}}}},875:(n,e,t)=>{n.exports=t.p+"5de0643bf1bbf77878ff.png"}},e={};function t(r){var i=e[r];if(void 0!==i)return i.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(379),e=t.n(n),r=t(772);e()(r.Z,{insert:"head",singleton:!1}),r.Z.locals;var i=t(875);let o,a=JSON.parse(localStorage.getItem("taskStorage"))||[],A=JSON.parse(localStorage.getItem("listStorage"))||["Reminders"],l="all",d=JSON.parse(localStorage.getItem("completedTasks"))||[];function s(){var n=L.querySelector("[name=taskText]").value;if(""==n)return;const e=L.querySelector("[name=taskDueDate]").value,t=L.querySelector("[name=taskNotes]").value||"   ",r=L.querySelector("[name=listSelector]").value;var i=function(n){return a.filter((e=>e.list==n)).length+1}(r),o={title:n,list:r,notes:t,dueDate:e,createdDate:i,listPriority:a.length,allPriority:undefined};a.push(o),p(),O(l),E.style.display="none",L.reset()}function c(){if(""!=y.querySelector("[name=addListText]").value){var n=I.value;A.push(n),y.reset(),y.style.display="none",C(),z(),$()}}function p(){localStorage.setItem("taskStorage",JSON.stringify(a))}function C(){localStorage.setItem("listStorage",JSON.stringify(A))}function u(){localStorage.setItem("completedTasks",JSON.stringify(d))}const f=n=>{n.target.matches(".deleteListButton")&&(o=n.target.dataset.list,D.style.display="block",j.innerHTML=`Are you sure you want to delete ${o} and all of it's tasks?`)};function g(){a.forEach((n=>{n.allPriority=a.indexOf(n)}))}function B(){d.forEach((n=>{n.allPriority=a.indexOf(n)}))}function x(n,e){a.forEach((t=>{t.list==n&&(t.listPriority<e||t.listPriority--)}))}const m=document.querySelector(".addListButton"),y=document.querySelector(".addListForm"),I=document.getElementById("addListText"),h=document.getElementById("allButton"),b=document.getElementById("todayButton"),v=document.getElementById("completedButton"),k=document.querySelector(".listNav"),w=document.querySelector(".newTaskButton"),T=document.getElementById("sortBySelector"),E=document.querySelector(".taskFormContainer"),L=document.querySelector(".taskForm"),P=document.getElementById("taskText"),S=document.getElementById("listSelector"),Y=document.querySelector(".taskViewRenderDiv"),D=document.querySelector(".listDeletePopup"),j=D.querySelector(".listDeleteWarning"),M=document.getElementById("yesDeleteList"),W=document.getElementById("noDeleteList"),N=document.getElementById("footerLink");k.addEventListener("click",(function(n){n.target.matches(".listButton")&&(l=n.target.innerHTML,O(l),z())})),k.addEventListener("click",f),M.addEventListener("click",(function(){A.splice(A.indexOf(o),1),C(),$(),z(),a.forEach((n=>{n.list==f.listToDelete&&a.splice(a.indexOf(n),1)})),g(),p(),O(l),D.style.display="none"})),W.addEventListener("click",(function(){D.style.display="none"})),h.addEventListener("click",(function(){l="all",O("all")})),b.addEventListener("click",(function(){l="today",O("today")})),v.addEventListener("click",(function(){l="completed",O("completed")})),Y.addEventListener("click",(function(n){if(n.target.matches(".TCDelete"))if("completed"==l)d.splice(n.target.dataset.index,1),B(),u(),O(l);else{var e=a[n.target.dataset.index].list,t=a[n.target.dataset.index].listPriority;a.splice(n.target.dataset.index,1),g(),x(e,t),p(),O(l)}})),Y.addEventListener("click",(function(n){if(n.target.matches(".priorUp")&&0!=n.target.dataset.index&&"today"!=l&&"completed"!=l){if("all"==l){var e=parseInt(n.target.dataset.index);a.forEach((n=>{n.allPriority<e-1||n.allPriority>e||(n.allPriority==e-1?n.allPriority++:n.allPriority==e&&n.allPriority--)}))}else{var t=a[parseInt(n.target.dataset.index)].listPriority;if(1==t)return;a.forEach((n=>{n.list==l&&(n.listPriority<t-1||n.listPriority>t||(n.listPriority==t-1?n.listPriority++:n.listPriority==t&&n.listPriority--))}))}a=a.sort(((n,e)=>n.allPriority-e.allPriority)),p(),O(l)}})),Y.addEventListener("click",(function(n){if(n.target.matches(".priorDown")&&n.target.dataset.index!=a.length-1&&"today"!=l&&"completed"!=l){if("all"==l){var e=parseInt(n.target.dataset.index);a.forEach((n=>{n.allPriority<e||n.allPriority>e+1||(n.allPriority==e?n.allPriority++:n.allPriority==e+1&&n.allPriority--)}))}else{var t=a[parseInt(n.target.dataset.index)].listPriority;if(t==renderArray.length)return;a.forEach((n=>{n.list==l&&(n.listPriority<t||n.listPriority>t+1||(n.listPriority==t+1?n.listPriority--:n.listPriority==t&&n.listPriority++))}))}a=a.sort(((n,e)=>n.allPriority-e.allPriority)),p(),O(l)}})),Y.addEventListener("click",(function(n){if(n.target.matches(".TCExpand")){var e=n.target.dataset.info,t=n.currentTarget.querySelector(`[data-expand="${e}"]`);t.classList.contains("expandedInfo")?t.classList.remove("expandedInfo"):t.classList.add("expandedInfo")}})),Y.addEventListener("click",(function(n){if(n.target.matches(".TCCheck")){var e=a.splice(a[n.target.dataset.index],1);d=d.concat(e),u(),g(),x(),B(),p(),O(l)}})),Y.addEventListener("click",(function(n){if(!n.target.matches(".TCTitle"))return;if("completed"==l)return;let e=n.target.dataset.index,t=n.target.parentElement;t.removeChild(n.target);let r=document.createElement("form");r.classList.add("TCchangeTitleForm");let i=document.createElement("input");i.type="text",i.classList.add("TCchangeTitleInput"),i.dataset.index=e,i.value=a[e].title,t.appendChild(r),r.appendChild(i)})),Y.addEventListener("submit",(function(n){if(n.preventDefault(),!n.target.matches(".changeTitleForm"))return;let e=n.target.querySelector("input");a[e.dataset.index].title=e.value,p(),O(l)})),Y.addEventListener("click",(function(n){if(!n.target.matches(".TCNotes"))return;if("completed"==l)return;let e=n.target.dataset.index,t=n.target.parentElement;t.removeChild(n.target);let r=document.createElement("form");r.classList.add("TCchangeNotesForm");let i=document.createElement("TEXTAREA");i.classList.add(".TCchangeNotesTextArea"),i.dataset.index=e,i.value=a[e].notes;let o=document.createElement("button");o.classList.add("TCNotesButton"),o.innerHTML="Save Changes",t.appendChild(r),r.appendChild(i),r.appendChild(o)})),Y.addEventListener("click",(function(n){if(n.preventDefault(),!n.target.matches(".TCNotesButton"))return;let e=n.target.parentElement.querySelector("textarea");a[e.dataset.index].notes=e.value,p(),O(l)})),m.addEventListener("click",(()=>{c(),y.reset(),y.style.display="block",I.focus(),I.focus()})),y.addEventListener("submit",(n=>{n.preventDefault(),c()})),w.addEventListener("click",(()=>{s(),L.reset(),z(),E.style.display="block",P.focus()})),T.addEventListener("change",(()=>{O(l)})),L.addEventListener("submit",(n=>{n.preventDefault(),s()})),window.addEventListener("keydown",(function(n){"Escape"===n.key&&(L.reset(),E.style.display="none",y.reset(),y.style.display="none",O(l))})),window.addEventListener("keydown",(function(n){"block"==E.style.display&&"Enter"===n.key&&s()}));const Z=new Image;function z(){S.innerHTML="",A.forEach((n=>{if(n==l){var e=document.createElement("option");(e=document.createElement("option")).innerHTML=`${n}`,e.selected="selected",S.appendChild(e)}else(e=document.createElement("option")).value=`${n}`,e.innerHTML=`${n}`,S.appendChild(e)}))}function $(){k.innerHTML="",A.forEach((n=>{var e=document.createElement("div");e.classList.add("navButton");var t=document.createElement("button");t.classList.add("listButton"),t.innerHTML=`${n}`;var r=document.createElement("button");r.innerHTML="X",r.classList.add("deleteListButton"),r.dataset.list=`${n}`,k.appendChild(e),e.appendChild(t),e.appendChild(r)}))}function O(n){var e=function(n){var e=T.value;let t,r,i=(new Date).toISOString().split("T")[0];switch(n){case"all":switch(e){case"priority":r=a.slice().sort(((n,e)=>n.allPriority-e.allPriority));break;case"due-date":r=a.slice().sort((function(n,e){var t=new Date(n.dueDate),r=new Date(e.dueDate);return t<r?-1:t==r?0:1}))}break;case"today":switch(e){case"priority":t=a.filter((n=>n.dueDate==i)),r=t.slice().sort(((n,e)=>n.allPriority-e.allPriority))}break;case"completed":switch(e){case"priority":r=d.slice().sort(((n,e)=>n.allPriority-e.allPriority))}break;default:switch(e){case"priority":t=a.filter((e=>e.list==n)),r=t.slice().sort(((n,e)=>n.listPriority-e.listPriority))}}return r}(n);!function(){for(;Y.firstChild;)Y.removeChild(Y.lastChild)}(),e.forEach((n=>{let e=`<input type="checkbox" class="TCCheck" data-index="${n.allPriority}">`,t=`<button class="TCButton TCPriorButton priorUp" data-index="${n.allPriority}">&#9650</button>\n            <button class="TCButton TCPriorButton priorDown" data-index="${n.allPriority}">&#9660</button>`,r="&nbsp;";""!=n.notes&&(r=n.notes),"completed"==l&&(e=""),"priority"!=T.value&&(t="");var i=document.createElement("div");i.classList.add("taskCard"),i.innerHTML=`<div class="TCTop">\n                <div class="TCTopLeft">\n                    ${e}\n                    <p class="TCTitle" data-index="${n.allPriority}">${n.title}</p>\n                </div>\n                <div class="TCTopRight">\n                    <input type="date" class="TCDate" value="${n.dueDate}">\n                    <div class="TCPriorityButtonContainer">\n                        ${t}\n                    </div>\n                    <button class="TCButton TCDelete" data-index="${n.allPriority}">X</button>\n                </div>\n            </div>\n            <div class="TCMiddle">\n                <button class="TCButton TCExpand" data-info="${n.allPriority}">info</button>\n            </div>\n            <div class="TCBottom" data-expand="${n.allPriority}">\n                <p>Notes:</p>\n                <div><p class="TCNotes" data-index="${n.allPriority}">${r}</p></div>\n                <p>List:</p>\n                <p class="TCList">${n.list}</p>\n            </div>`,Y.appendChild(i)}))}Z.src=i,Z.alt="git hub mark",Z.height="20",Z.width="20",N.appendChild(Z),z(),$(),O("all")})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,